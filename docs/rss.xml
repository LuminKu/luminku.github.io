<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>布谷博客</title><link>https://luminku.github.io</link><description>一个分享有趣技术DIY的科技类博主</description><copyright>布谷博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/240149665?v=4</url><title>avatar</title><link>https://luminku.github.io</link></image><lastBuildDate>Fri, 31 Oct 2025 15:57:07 +0000</lastBuildDate><managingEditor>布谷博客</managingEditor><ttl>60</ttl><webMaster>布谷博客</webMaster><item><title>Maven默认本地仓库位置【31】</title><link>https://luminku.github.io/post/Maven-mo-ren-ben-di-cang-ku-wei-zhi-%E3%80%9031%E3%80%91.html</link><description>Maven的默认本地仓库位置是用户目录下的`.m2/repository`文件夹。</description><guid isPermaLink="true">https://luminku.github.io/post/Maven-mo-ren-ben-di-cang-ku-wei-zhi-%E3%80%9031%E3%80%91.html</guid><pubDate>Fri, 31 Oct 2025 15:56:20 +0000</pubDate></item><item><title>CentOS 7 Docker 环境下的网络配置【30】</title><link>https://luminku.github.io/post/CentOS%207%20Docker%20-huan-jing-xia-de-wang-luo-pei-zhi-%E3%80%9030%E3%80%91.html</link><description># 1. 

好的，我们来全面解读一下您 CentOS 7 Docker 环境下的网络配置。</description><guid isPermaLink="true">https://luminku.github.io/post/CentOS%207%20Docker%20-huan-jing-xia-de-wang-luo-pei-zhi-%E3%80%9030%E3%80%91.html</guid><pubDate>Tue, 28 Oct 2025 08:20:55 +0000</pubDate></item><item><title>CentOS7 Docker网络访问问题解决【29】</title><link>https://luminku.github.io/post/CentOS7%20Docker-wang-luo-fang-wen-wen-ti-jie-jue-%E3%80%9029%E3%80%91.html</link><description># 1 🌺

你在CentOS 7中使用Docker自定义网络时，遇到宿主机无法访问mysql2服务的问题。</description><guid isPermaLink="true">https://luminku.github.io/post/CentOS7%20Docker-wang-luo-fang-wen-wen-ti-jie-jue-%E3%80%9029%E3%80%91.html</guid><pubDate>Tue, 28 Oct 2025 08:18:47 +0000</pubDate></item><item><title>登录认证-拦截器与过滤器【28】</title><link>https://luminku.github.io/post/deng-lu-ren-zheng---lan-jie-qi-yu-guo-lv-qi-%E3%80%9028%E3%80%91.html</link><description>
# 1. 登录与拦截器 SSM如何实现

```plain text
图片中是SSM框架中对用户登录以及登录拦截器的核心代码，请对其做出全方位评价（安全性、扩展性（后端服务器、单体服务器）等维度越全越好）。</description><guid isPermaLink="true">https://luminku.github.io/post/deng-lu-ren-zheng---lan-jie-qi-yu-guo-lv-qi-%E3%80%9028%E3%80%91.html</guid><pubDate>Tue, 28 Oct 2025 08:14:23 +0000</pubDate></item><item><title>SSM框架与前端技术全面解析【27】</title><link>https://luminku.github.io/post/SSM-kuang-jia-yu-qian-duan-ji-shu-quan-mian-jie-xi-%E3%80%9027%E3%80%91.html</link><description># 1 SSM 框架介绍 与 前端框架

```plain text
Java EE企业级开发中采用SSM框架，请对SSM进行介绍（什么时候开始流行、最初的目的、优缺点、系统体量（QPS、流量等维度越多于浩）、目前现状等维度越全越好）；
再对前端一般使用那些框架用于快速开发，标明流行度，目前流行程度（替代品）、等维度可以适当扩展
```

&gt; 嗯，用户想要了解Java EE企业级开发中的SSM框架以及相关的前端框架情况。</description><guid isPermaLink="true">https://luminku.github.io/post/SSM-kuang-jia-yu-qian-duan-ji-shu-quan-mian-jie-xi-%E3%80%9027%E3%80%91.html</guid><pubDate>Tue, 28 Oct 2025 08:03:40 +0000</pubDate></item><item><title>创建Chrome快捷方式及图标设置方法【26】</title><link>https://luminku.github.io/post/chuang-jian-Chrome-kuai-jie-fang-shi-ji-tu-biao-she-zhi-fang-fa-%E3%80%9026%E3%80%91.html</link><description>在Windows中，使用系统已有的命令为指定网址创建带有自定义图标的Google浏览器快捷方式，可以通过一些脚本工具实现。</description><guid isPermaLink="true">https://luminku.github.io/post/chuang-jian-Chrome-kuai-jie-fang-shi-ji-tu-biao-she-zhi-fang-fa-%E3%80%9026%E3%80%91.html</guid><pubDate>Tue, 28 Oct 2025 07:50:42 +0000</pubDate></item><item><title>Java复合赋值运算符原理与使用建议【25】</title><link>https://luminku.github.io/post/Java-fu-he-fu-zhi-yun-suan-fu-yuan-li-yu-shi-yong-jian-yi-%E3%80%9025%E3%80%91.html</link><description>```plain text
java不同版本中对下面这3行代码：
short i = 0; i = i + 1; 与 short i = 0; i += 1;
short i = 0; i = i + '0'; 与 short i = 0; i += '0';
short i = 0; i = i + 2.3; 与 short i = 0; i += 2.3; 
同理 byte、char、int、float、long、double都有类似的特性；
每行第一种编译时就会报错，而每行后一种则能自动强制类型转换，这是什么原理（底层设计），有何作用，是java编译器、java虚拟机正常工作的特性吗，注意与防范，使用中有何建议
```


这是一个非常经典且重要的Java问题，它触及了Java语言设计核心中的**类型安全**和**语法糖**概念。</description><guid isPermaLink="true">https://luminku.github.io/post/Java-fu-he-fu-zhi-yun-suan-fu-yuan-li-yu-shi-yong-jian-yi-%E3%80%9025%E3%80%91.html</guid><pubDate>Mon, 27 Oct 2025 02:19:59 +0000</pubDate></item><item><title>SpringBoot文件上传大小限制配置方案【24】</title><link>https://luminku.github.io/post/SpringBoot-wen-jian-shang-chuan-da-xiao-xian-zhi-pei-zhi-fang-an-%E3%80%9024%E3%80%91.html</link><description>&gt; 在SpringBoot应用中设置文件上传的大小限制，希望默认最大为1MB，但特定接口（upload）允许最大5MB。</description><guid isPermaLink="true">https://luminku.github.io/post/SpringBoot-wen-jian-shang-chuan-da-xiao-xian-zhi-pei-zhi-fang-an-%E3%80%9024%E3%80%91.html</guid><pubDate>Mon, 27 Oct 2025 02:14:56 +0000</pubDate></item><item><title>阿里云OSS文件访问URL生成方法【23】</title><link>https://luminku.github.io/post/a-li-yun-OSS-wen-jian-fang-wen-URL-sheng-cheng-fang-fa-%E3%80%9023%E3%80%91.html</link><description>&gt; 
&gt; 为了生成一个带有签名的URL，我们可以使用阿里云OSS SDK中的`generatePresignedUrl`方法。</description><guid isPermaLink="true">https://luminku.github.io/post/a-li-yun-OSS-wen-jian-fang-wen-URL-sheng-cheng-fang-fa-%E3%80%9023%E3%80%91.html</guid><pubDate>Mon, 27 Oct 2025 02:10:02 +0000</pubDate></item><item><title>37wow学习法评价与推广建议【22】</title><link>https://luminku.github.io/post/37wow-xue-xi-fa-ping-jia-yu-tui-guang-jian-yi-%E3%80%9022%E3%80%91.html</link><description>```plain text
在进行学习的时候我自创了一种学习方法“37wow”，请对其进行评价，请生成完整的此学习方法进行有针对性且巧妙的情节阐述（即完善一下，我进行推广，方便别人了解该方法）。</description><guid isPermaLink="true">https://luminku.github.io/post/37wow-xue-xi-fa-ping-jia-yu-tui-guang-jian-yi-%E3%80%9022%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 14:09:06 +0000</pubDate></item><item><title>Spring Boot中@RestController与@Controller区别【21】</title><link>https://luminku.github.io/post/Spring%20Boot-zhong-%40RestController-yu-%40Controller-qu-bie-%E3%80%9021%E3%80%91.html</link><description>这是一个关于 Spring Boot 中两个核心注解的经典问题。</description><guid isPermaLink="true">https://luminku.github.io/post/Spring%20Boot-zhong-%40RestController-yu-%40Controller-qu-bie-%E3%80%9021%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 14:03:21 +0000</pubDate></item><item><title>JDK 8与JDK 9运行Amass项目指南【20】</title><link>https://luminku.github.io/post/JDK%208-yu-JDK%209-yun-xing-Amass-xiang-mu-zhi-nan-%E3%80%9020%E3%80%91.html</link><description>```plain text
如何运行下面项目代码中的类，用jdk8、jdk9分别运行（有什么区别）
amass
    |- src/main/java/cn/xiaxin/Multiple.java
    |- pox.xml
```

&gt; 由于问题中只提供了项目结构，并没有提供具体的代码内容，因此我将假设Multiple.java是一个简单的Java类，并且pom.xml是一个基本的Maven配置文件。</description><guid isPermaLink="true">https://luminku.github.io/post/JDK%208-yu-JDK%209-yun-xing-Amass-xiang-mu-zhi-nan-%E3%80%9020%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 14:01:25 +0000</pubDate></item><item><title>Windows进程终止命令详解【19】</title><link>https://luminku.github.io/post/Windows-jin-cheng-zhong-zhi-ming-ling-xiang-jie-%E3%80%9019%E3%80%91.html</link><description>
```plain text
windos中直接杀死进程的命令分哪几个级别，分别有那些方式请详细举例说明。</description><guid isPermaLink="true">https://luminku.github.io/post/Windows-jin-cheng-zhong-zhi-ming-ling-xiang-jie-%E3%80%9019%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:56:31 +0000</pubDate></item><item><title>进程与线程对比及量化分析【18】</title><link>https://luminku.github.io/post/jin-cheng-yu-xian-cheng-dui-bi-ji-liang-hua-fen-xi-%E3%80%9018%E3%80%91.html</link><description>线程和进程是操作系统中两个非常重要的概念，它们在设计之初的背景、概念、结构、作用、性能、开销以及隔离性等方面都有显著的区别。</description><guid isPermaLink="true">https://luminku.github.io/post/jin-cheng-yu-xian-cheng-dui-bi-ji-liang-hua-fen-xi-%E3%80%9018%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:54:36 +0000</pubDate></item><item><title>面试准备提问模板设计指南【17】</title><link>https://luminku.github.io/post/mian-shi-zhun-bei-ti-wen-mo-ban-she-ji-zhi-nan-%E3%80%9017%E3%80%91.html</link><description>```plain text
请你帮我写N套提问ChatAI的模版，该模版用于面试前的准备。</description><guid isPermaLink="true">https://luminku.github.io/post/mian-shi-zhun-bei-ti-wen-mo-ban-she-ji-zhi-nan-%E3%80%9017%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:48:47 +0000</pubDate></item><item><title>分库分表面试准备与技术讲解【16】</title><link>https://luminku.github.io/post/fen-ku-fen-biao-mian-shi-zhun-bei-yu-ji-shu-jiang-jie-%E3%80%9016%E3%80%91.html</link><description>```plain text
请扮演一位资深技术面试官，我正在准备关于 {mysql} 中 `{分库分表}` 的面试。</description><guid isPermaLink="true">https://luminku.github.io/post/fen-ku-fen-biao-mian-shi-zhun-bei-yu-ji-shu-jiang-jie-%E3%80%9016%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:44:40 +0000</pubDate></item><item><title>Markdown 全格式示例文档【15】</title><link>https://luminku.github.io/post/Markdown%20-quan-ge-shi-shi-li-wen-dang-%E3%80%9015%E3%80%91.html</link><description>&gt; 为了展示Markdown的各种格式，我将创建一个包含以下元素的示例：
&gt;
&gt; 1. 标题（多级）
&gt; 2. 文本样式（粗体、斜体、删除线、高亮、下标、上标）
&gt; 3. 列表（有序和无序）
&gt; 4. 链接和图片
&gt; 5. 表格
&gt; 6. 代码（行内代码和代码块）
&gt; 7. 引用
&gt; 8. 数学公式
&gt; 9. 水平线
&gt; 10. 注释（HTML注释，在Markdown中通常不可见，但可以添加）
&gt; 11. 任务列表
&gt; 12. 脚注
&gt; 13. 定义列表
&gt; 14. Mermaid图表（流程图、序列图等）
&gt;
&gt; 注意：Typora支持大部分CommonMark和GFM（GitHub Flavored Markdown）语法，同时也支持一些扩展语法（如数学公式、Mermaid等）。</description><guid isPermaLink="true">https://luminku.github.io/post/Markdown%20-quan-ge-shi-shi-li-wen-dang-%E3%80%9015%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:37:46 +0000</pubDate></item><item><title>MDX 中兼容 MD 的彩色文本组件方案【14】</title><link>https://luminku.github.io/post/MDX%20-zhong-jian-rong-%20MD%20-de-cai-se-wen-ben-zu-jian-fang-an-%E3%80%9014%E3%80%91.html</link><description>&gt; 
&gt; 我们希望在MDX中定义一个SPAN组件，它既可以接受具体的颜色值（如方案一），也可以使用预定义的颜色（如方案二）。</description><guid isPermaLink="true">https://luminku.github.io/post/MDX%20-zhong-jian-rong-%20MD%20-de-cai-se-wen-ben-zu-jian-fang-an-%E3%80%9014%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:34:48 +0000</pubDate></item><item><title>MDX 中定义和使用组件的问题解析【13】</title><link>https://luminku.github.io/post/MDX%20-zhong-ding-yi-he-shi-yong-zu-jian-de-wen-ti-jie-xi-%E3%80%9013%E3%80%91.html</link><description>遇到的 `Welcome is not defined` 错误是因为 **MDX 的作用域限制**。</description><guid isPermaLink="true">https://luminku.github.io/post/MDX%20-zhong-ding-yi-he-shi-yong-zu-jian-de-wen-ti-jie-xi-%E3%80%9013%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:33:22 +0000</pubDate></item><item><title>MDX 中定义变量、函数和组件的完整指南【12】</title><link>https://luminku.github.io/post/MDX%20-zhong-ding-yi-bian-liang-%E3%80%81-han-shu-he-zu-jian-de-wan-zheng-zhi-nan-%E3%80%9012%E3%80%91.html</link><description>&gt; 
&gt; 在MDX中，我们可以使用一些JavaScript代码，但是需要注意的是，MDX文件通常被编译为React组件，因此它支持在模块顶层导入（import）和导出（export），以及内联的JSX表达式（即用花括号{}包裹的JavaScript表达式）。</description><guid isPermaLink="true">https://luminku.github.io/post/MDX%20-zhong-ding-yi-bian-liang-%E3%80%81-han-shu-he-zu-jian-de-wan-zheng-zhi-nan-%E3%80%9012%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:30:45 +0000</pubDate></item><item><title>MDX支持的高阶语法及JSX扩展【11】</title><link>https://luminku.github.io/post/MDX-zhi-chi-de-gao-jie-yu-fa-ji-JSX-kuo-zhan-%E3%80%9011%E3%80%91.html</link><description>&gt; 我们讨论的是MDX，它支持标准的Markdown语法，并且允许在Markdown中直接使用JSX（即JavaScript XML，类似于HTML的语法）以及JavaScript表达式。</description><guid isPermaLink="true">https://luminku.github.io/post/MDX-zhi-chi-de-gao-jie-yu-fa-ji-JSX-kuo-zhan-%E3%80%9011%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:26:55 +0000</pubDate></item><item><title>DDD领域驱动设计全解析【10】</title><link>https://luminku.github.io/post/DDD-ling-yu-qu-dong-she-ji-quan-jie-xi-%E3%80%9010%E3%80%91.html</link><description>&gt; 在工作中遇到了传统分层架构的问题，比如代码混乱、维护困难，或者正在参与复杂业务系统开发，需要更系统的方法来管理复杂度。</description><guid isPermaLink="true">https://luminku.github.io/post/DDD-ling-yu-qu-dong-she-ji-quan-jie-xi-%E3%80%9010%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:20:16 +0000</pubDate></item><item><title>HTML文件中&lt;link&gt; 标签全面讲解【09】</title><link>https://luminku.github.io/post/HTML-wen-jian-zhong--link-%20-biao-qian-quan-mian-jiang-jie-%E3%80%9009%E3%80%91.html</link><description>![image](https://gitee.com/LuminKu/picture/raw/master/pictures/20251026211503273.png)

&gt; 我们注意到，这个HTML片段包含多个&lt;link&gt;标签，它们用于引入外部资源。</description><guid isPermaLink="true">https://luminku.github.io/post/HTML-wen-jian-zhong--link-%20-biao-qian-quan-mian-jiang-jie-%E3%80%9009%E3%80%91.html</guid><pubDate>Sun, 26 Oct 2025 13:15:50 +0000</pubDate></item><item><title>HTTP请求完整生命周期：从点击到响应的深度剖析</title><link>https://luminku.github.io/post/HTTP-qing-qiu-wan-zheng-sheng-ming-zhou-qi-%EF%BC%9A-cong-dian-ji-dao-xiang-ying-de-shen-du-pou-xi.html</link><description>&gt; 
&gt; 我们从一个用户点击提交按钮开始，直到收到响应为止，详细剖析整个过程中的底层原理。</description><guid isPermaLink="true">https://luminku.github.io/post/HTTP-qing-qiu-wan-zheng-sheng-ming-zhou-qi-%EF%BC%9A-cong-dian-ji-dao-xiang-ying-de-shen-du-pou-xi.html</guid><pubDate>Sun, 26 Oct 2025 10:04:13 +0000</pubDate></item><item><title>Axios + SpringBoot 前后端交互完整模板集🌺</title><link>https://luminku.github.io/post/Axios%20%2B%20SpringBoot%20-qian-hou-duan-jiao-hu-wan-zheng-mo-ban-ji-%F0%9F%8C%BA.html</link><description>&gt; 我们使用Axios作为前端HTTP客户端，SpringBoot作为后端框架。</description><guid isPermaLink="true">https://luminku.github.io/post/Axios%20%2B%20SpringBoot%20-qian-hou-duan-jiao-hu-wan-zheng-mo-ban-ji-%F0%9F%8C%BA.html</guid><pubDate>Sun, 26 Oct 2025 09:00:07 +0000</pubDate></item><item><title>🌐 HTTP协议数据结构全解析2</title><link>https://luminku.github.io/post/%F0%9F%8C%90%20HTTP-xie-yi-shu-ju-jie-gou-quan-jie-xi-2.html</link><description># 🌐 HTTP协议数据结构全解析

HTTP协议的数据传输结构非常清晰，让我从专业角度为您详细解析每个组成部分及其技术实现。</description><guid isPermaLink="true">https://luminku.github.io/post/%F0%9F%8C%90%20HTTP-xie-yi-shu-ju-jie-gou-quan-jie-xi-2.html</guid><pubDate>Sun, 26 Oct 2025 08:29:56 +0000</pubDate></item><item><title>HTTP协议数据结构全解析</title><link>https://luminku.github.io/post/HTTP-xie-yi-shu-ju-jie-gou-quan-jie-xi.html</link><description>
我们首先需要理解HTTP请求和响应的结构。</description><guid isPermaLink="true">https://luminku.github.io/post/HTTP-xie-yi-shu-ju-jie-gou-quan-jie-xi.html</guid><pubDate>Sun, 26 Oct 2025 08:28:56 +0000</pubDate></item><item><title>HTTP请求方法全面解读与实战指南</title><link>https://luminku.github.io/post/HTTP-qing-qiu-fang-fa-quan-mian-jie-du-yu-shi-zhan-zhi-nan.html</link><description>### 🌐 HTTP全面解读：从基础到实战

作为一名开发人员，深入理解HTTP（HyperText Transfer Protocol）是构建现代Web应用的基石。</description><guid isPermaLink="true">https://luminku.github.io/post/HTTP-qing-qiu-fang-fa-quan-mian-jie-du-yu-shi-zhan-zhi-nan.html</guid><pubDate>Sun, 26 Oct 2025 07:59:37 +0000</pubDate></item><item><title>全面解析DNS域名系统🌟</title><link>https://luminku.github.io/post/quan-mian-jie-xi-DNS-yu-ming-xi-tong-%F0%9F%8C%9F.html</link><description>本文将全面系统地为你讲解DNS域名系统，内容包括基础概念、工作原理、层次结构、记录类型、传播机制以及安全与发展趋势。</description><guid isPermaLink="true">https://luminku.github.io/post/quan-mian-jie-xi-DNS-yu-ming-xi-tong-%F0%9F%8C%9F.html</guid><pubDate>Sun, 26 Oct 2025 01:59:57 +0000</pubDate></item><item><title>GitHub 项目许可证类型全方位解析2</title><link>https://luminku.github.io/post/GitHub%20-xiang-mu-xu-ke-zheng-lei-xing-quan-fang-wei-jie-xi-2.html</link><description># GitHub 项目许可证类型全方位解析

GitHub 提供了多种开源许可证选项，每种许可证都有不同的权利、义务和限制。</description><guid isPermaLink="true">https://luminku.github.io/post/GitHub%20-xiang-mu-xu-ke-zheng-lei-xing-quan-fang-wei-jie-xi-2.html</guid><pubDate>Sat, 25 Oct 2025 13:48:32 +0000</pubDate></item><item><title>GitHub项目许可证类型全方位解析</title><link>https://luminku.github.io/post/GitHub-xiang-mu-xu-ke-zheng-lei-xing-quan-fang-wei-jie-xi.html</link><description>&lt;!--GitHub 项目许可证类型全方位解析--&gt;

我们首先需要了解GitHub上常见的开源许可证，然后从多个维度进行比较，包括权限、条件、限制等。</description><guid isPermaLink="true">https://luminku.github.io/post/GitHub-xiang-mu-xu-ke-zheng-lei-xing-quan-fang-wei-jie-xi.html</guid><pubDate>Sat, 25 Oct 2025 10:18:23 +0000</pubDate></item></channel></rss>